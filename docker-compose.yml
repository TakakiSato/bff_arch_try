version: '3.7'

networks:
  bff_arch_net:

volumes:
  backend-data:
  db-data:

services:
  backend:
    image: nginx
    platform: linux/amd64
    volumes:
      - ./backend_nginx:/app/app/webroot
      - ./docker/backend/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
    - "8000:80"
    environment:
    - NGINX_HOST=backend.com
    - NGINX_PORT=80
    networks:
      bff_arch_net:

  bff:
    image: node:16.14.0
    volumes:
      - ./bff_exprese_graphql:/app
    ports:
    - "4000:4000"
    command: /bin/bash -c "cd /app; npm install; npm run ts-node-dev"
    networks:
      bff_arch_net:

  front:
    image: node:16.14.0
    volumes:
      - ./front_nuxt3:/app
    ports:
    - "3000:3000"
    - "24678:24678" #vite用ポート
    command: /bin/bash -c "cd /app; npm install; npm run dev -- -o"
    networks:
      bff_arch_net:

  auth:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8765:8765"
      - "9000:9000"
    tty: true
    stdin_open: true
    volumes:
      - ./auth_cake4:/app
    command: /bin/bash -c "/app/bin/cake server"
    networks:
      bff_arch_net:

  mysql:
    image: mysql:5.6
    platform: linux/amd64
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: app
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: root
      TZ: "Asia/Tokyo"
    volumes:
      - db-data:/var/lib/mysql
    networks:
      bff_arch_net: